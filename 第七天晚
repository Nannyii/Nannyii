
//用函数比较大小
//int Max(int x, int y)
//{
//	if(x>y)
//		return x;
//	else
//		return y;
//}
//int main()
//{
//	int num1=10;
//	int num2=20;
//	int max=0;
//	max=Max(num1,num2);
//	printf("max=%d\n",max);
//	return 0;
//}
//int main()
//{
//
//int arr[10]={0};//10个整型元素的数组
//int sz =0;
////10*sizeof (int)=40
//printf("%d\n",sizeof (arr));
////计算数组的元素个数,单位是字节
////个数=数组总大小/每个元素的大小
//sz=sizeof (arr)/sizeof (arr [0]);
//printf("sz %d\n",sz);//10
////inta=10;
/////sizeof计算的是变量/类型所点空间的大小，单位是字节
////printf("%d\n",sizeof (a));//4
////printf("%d\n",sizeof (int));//4
////printf(%d\n",sizeof a);//4
////printf("%d\n",sizeof int);//错误
//return 0;
//}
int main()
{
int a=0;//四个字节，32个比特位
int b=~a;//~按位取反//b是有符号的整型//二进制最高位表示的是符号位，0是正数，1是负数
  //a->00000000000000000000000000000000
  //b->11111111111111111111111111111111
//原码、反码、补码
  //复述在内存中存储的时候，存储的是二进制的补码
printf("%d\n",b);//-1//使用的打印的是这个数的原码
  //原码按位取反得到反码，反码加一变成补码
  //b->11111111111111111111111111111111//补码
  //补码求反码，直接减一
  //b->11111111111111111111111111111110//反码
  //反码求原码，符号位不变，其他位按位取反
  //b->10000000000000000000000000000001//原码//开头符号位是1，负数，那么结果就是-1
return 0;
}
