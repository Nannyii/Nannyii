//int main()
//{
////register int a=10;//建议把a定义成寄存器变量//但会不会真正存到，取决于编译器判断
//  int a=-2;//int定义的变量是有符号的
//  signed int a=2;//int=signed int//默认省略signed
//  unsigned int num=0;//unsignd int定义无符号变量
//  //struct-结构体
//  //union-联合体
//  
//return 0;
//}
//int main()
//{
//  typedef unsigned int u_int;//unsigned int太长了，可以重新定义为u_int
//  unsigned int num=20;
//  u_int num2=20;
//  return 0;
//}
//static修饰局部变量时
//局部变量生命周期变长了
//void test()
//{
//static int a=1;//加上static就是静态的局部变量了
//  a++;
//  printf("a=%d\n,a");//2 3 4 5 6
//}
//int main()
//{
//  int i=0;
//  while(i<5)
//  {
//test()；
//  i++；
//  }
//  return 0;
//}
//static修饰全局变量
//改变作用域-让静态的全局变量只能在自己所在的原文件内部使用，出了原文件就没法使用
static int g_val=2020;//全局变量//放在另一个文件里
int main()
{
  //extern-声明外部符号的
  extern int g_val;
  printf("g_val=%d\n,g_val");
  return 0;
}
